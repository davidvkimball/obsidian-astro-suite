/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var A=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var Y=Object.prototype.hasOwnProperty;var V=(y,F)=>{for(var s in F)A(y,s,{get:F[s],enumerable:!0})},B=(y,F,s,t)=>{if(F&&typeof F=="object"||typeof F=="function")for(let e of L(F))!Y.call(y,e)&&e!==s&&A(y,e,{get:()=>F[e],enumerable:!(t=S(F,e))||t.enumerable});return y};var R=y=>B(A({},"__esModule",{value:!0}),y);var H={};V(H,{default:()=>k});module.exports=R(H);var i=require("obsidian"),W={enableUnderscorePrefix:!1,defaultTemplate:`---
title: "{{title}}"
date: {{date}}
tags: []
---
`,linkBasePath:"/blog/",postsFolder:"posts",automatePostCreation:!0,autoInsertProperties:!0,creationMode:"file",indexFileName:"index",dateFormat:"YYYY-MM-DD",excludedDirectories:"",onlyAutomateInPostsFolder:!1,enablePages:!1,pagesFolder:"pages",pageTemplate:`---
title: "{{title}}"
description: ""
---
`},k=class extends i.Plugin{async onload(){await this.loadSettings(),this.app.workspace.onLayoutReady(()=>{this.registerCreateEvent()}),this.addCommand({id:"standardize-properties",name:"Standardize Properties",icon:"file-check",editorCallback:(s,t)=>{t.file instanceof i.TFile&&this.standardizeProperties(t.file)}}),this.addCommand({id:"convert-wikilinks-astro",name:"Convert internal links for Astro",icon:"link-2",editorCallback:(s,t)=>{t.file instanceof i.TFile&&this.convertWikilinksForAstro(s,t.file)}}),this.addSettingTab(new M(this.app,this))}registerCreateEvent(){if(this.createEvent&&this.app.vault.off("create",this.createEvent),this.settings.automatePostCreation||this.settings.enablePages){let s=0,t=500;this.createEvent=async e=>{let r=Date.now();if(!(r-s<t)&&(s=r,e instanceof i.TFile&&e.extension==="md")){let c=e.path,n=await this.app.vault.adapter.stat(e.path),d=(n==null?void 0:n.mtime)&&r-n.mtime<1e3,p=(await this.app.vault.read(e)).trim()==="";if(!d||!p)return;let l=this.settings.postsFolder||"",u=this.settings.enablePages&&this.settings.pagesFolder||"",h=!1;u&&(c.startsWith(u+"/")||c===u)&&(h=!0);let C=this.app.metadataCache.getCache(e.path);if(!C||!C.sections||C.sections.length===0)if(h)this.settings.enablePages&&new D(this.app,e,this,"page").open();else if(this.settings.onlyAutomateInPostsFolder)(!l||c.startsWith(l+"/")||c===l)&&new D(this.app,e,this,"post").open();else{let f=this.settings.excludedDirectories.split("|").map(w=>w.trim()).filter(w=>w.length>0);u&&f.push(u),f.some(w=>c.startsWith(w+"/")||c===w)||new D(this.app,e,this,"post").open()}}},this.registerEvent(this.app.vault.on("create",this.createEvent))}}toKebabCase(s){return s.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}async createFile(s,t,e){if(!t)return new i.Notice(`Title is required to create a ${e}.`),null;let r=this.toKebabCase(t),c=this.settings.enableUnderscorePrefix?"_":"",n=e==="post"?this.settings.postsFolder||"":this.settings.pagesFolder||"";if(n&&(this.app.vault.getAbstractFileByPath(n)instanceof i.TFolder||await this.app.vault.createFolder(n)),this.settings.creationMode==="folder"){let d=`${c}${r}`,a=n?`${n}/${d}`:d;try{this.app.vault.getAbstractFileByPath(a)instanceof i.TFolder||await this.app.vault.createFolder(a)}catch(h){}let p=`${this.settings.indexFileName}.md`,l=`${a}/${p}`;if(this.app.vault.getAbstractFileByPath(l)instanceof i.TFile)return new i.Notice(`File already exists at ${l}.`),null;try{await this.app.vault.rename(s,l);let h=this.app.vault.getAbstractFileByPath(l);return h instanceof i.TFile?(setTimeout(()=>{let f=this.app.workspace.getLeavesOfType("file-explorer")[0];if(f&&f.view){let b=f.view.tree;b&&h instanceof i.TFile&&b.revealFile(h)}},200),await this.app.workspace.getLeaf(!1).openFile(h),this.settings.autoInsertProperties&&await this.addPropertiesToFile(h,t,e),h):null}catch(h){return new i.Notice(`Failed to create folder structure: ${h.message}.`),null}}else{let d=`${c}${r}.md`,a=n?`${n}/${d}`:d,p=this.app.vault.getAbstractFileByPath(a);if(p instanceof i.TFile&&p!==s)return new i.Notice(`File with name "${d}" already exists.`),null;try{await this.app.vault.rename(s,a);let l=this.app.vault.getAbstractFileByPath(a);return l instanceof i.TFile?(await this.app.workspace.getLeaf(!1).openFile(l),this.settings.autoInsertProperties&&await this.addPropertiesToFile(l,t,e),l):null}catch(l){return new i.Notice(`Failed to rename file: ${l.message}.`),null}}}async addPropertiesToFile(s,t,e="post"){let r=new Date,c=window.moment(r).format(this.settings.dateFormat),n=e==="post"?this.settings.defaultTemplate:this.settings.pageTemplate;n=n.replace(/\{\{title\}\}/g,t),n=n.replace(/\{\{date\}\}/g,c),await this.app.vault.modify(s,n)}async standardizeProperties(s){var $;if(!(s instanceof i.TFile)){new i.Notice("No active file.");return}let t=s.path,e=this.settings.pagesFolder||"",c=this.settings.enablePages&&e&&(t.startsWith(e+"/")||t===e)?this.settings.pageTemplate:this.settings.defaultTemplate;await new Promise(o=>setTimeout(o,100));let n=await this.app.vault.read(s),d=s.basename.replace(/^_/,""),a=0,p="",l={},u=["tags","aliases","cssclasses"];if(n.startsWith("---")){a=n.indexOf(`
---`,3),a===-1?a=n.length:a+=4,p=n.slice(4,a-4).trim();try{let o=null;p.split(`
`).forEach(g=>{let x=g.match(/^(\w+):\s*(.+)?$/);if(x){let[,m,P]=x;o=m,u.includes(m)?l[m]=[]:l[m]=[P?P.trim():""]}else if(o&&u.includes(o)&&g.trim().startsWith("- ")){let m=g.trim().replace(/^-\s*/,"");m&&l[o].push(m)}else if(g.trim()&&!g.trim().startsWith("- ")){let m=g.match(/^(\w+):/);if(m){let P=m[1],v=g.slice(g.indexOf(":")+1).trim();l[P]||(l[P]=[v||""])}}}),u.forEach(g=>{p.includes(g+":")&&!l[g]&&(l[g]=[])})}catch(o){new i.Notice("Falling back to template due to parsing error.")}}let h=c.split(`
`),C=[],f={},b=!1;for(let o=0;o<h.length;o++){let g=h[o].trim();if(g==="---"){if(b=!b,!b)break;continue}if(b){let x=g.match(/^(\w+):\s*(.+)?$/);if(x){let[,m,P]=x;if(C.push(m),u.includes(m))if(P&&P.startsWith("[")){let v=P.replace(/[\[\]]/g,"").split(",").map(E=>E.trim()).filter(E=>E);f[m]=v}else{f[m]=[];for(let v=o+1;v<h.length;v++){let E=h[v].trim();if(E.startsWith("- ")){let I=E.replace(/^-\s*/,"").trim();I&&f[m].push(I)}else if(E==="---")break}}else f[m]=[(P||"").replace(/\{\{title\}\}/g,d).replace(/\{\{date\}\}/g,window.moment(new Date).format(this.settings.dateFormat))]}}}let w={...l};for(let o of C)if(!(o in l))w[o]=f[o]||(u.includes(o)?[]:[""]);else if(u.includes(o)&&(($=f[o])==null?void 0:$.length)>0){let g=[...l[o]||[],...f[o].filter(x=>!(l[o]||[]).includes(x))];w[o]=g}let T=`---
`;for(let o in w)u.includes(o)?(T+=`${o}:
`,w[o].length>0&&w[o].forEach(g=>{T+=`  - ${g}
`})):T+=`${o}: ${w[o][0]||""}
`;T+="---";let N=n.slice(a);T+=N,await this.app.vault.modify(s,T),new i.Notice("Properties standardized using template.")}getAstroUrlFromInternalLink(s){let t=s.indexOf("#"),e=t>=0?s.slice(0,t):s,r=t>=0?s.slice(t):"";e=e.replace(/\.md$/,""),e.startsWith(this.settings.postsFolder+"/")?e=e.slice(this.settings.postsFolder.length+1):this.settings.enablePages&&e.startsWith(this.settings.pagesFolder+"/")&&(e=e.slice(this.settings.pagesFolder.length+1));let c=!1;if(this.settings.creationMode==="folder"){let p=e.split("/");p[p.length-1]===this.settings.indexFileName&&(p.pop(),e=p.join("/"),c=!0)}let d=e.split("/").map(p=>this.toKebabCase(p)).join("/"),a=this.settings.linkBasePath;return a.startsWith("/")||(a="/"+a),a.endsWith("/")||(a+="/"),`${a}${d}${c?"/":""}${r}`}async convertWikilinksForAstro(s,t){if(!(t instanceof i.TFile)){new i.Notice("No active file.");return}let r=s.getValue(),c=/\.(png|jpg|jpeg|gif|svg)$/i;r=r.replace(/\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(n,d,a,p)=>{if(c.test(d))return n;let l=p||d.replace(/\.md$/,""),u=this.getAstroUrlFromInternalLink(d);return`[${l}](${u})`}),r=r.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(n,d,a)=>{if(a.match(/^https?:\/\//)||c.test(a)||!a.includes(".md"))return n;let p=this.getAstroUrlFromInternalLink(a);return`[${d}](${p})`}),r=r.replace(/!\[(.*?)\]\(([^)]+)\)/g,n=>n),r=r.replace(/\{\{([^}]+)\}\}/g,(n,d)=>{if(c.test(d))return n;let a=this.getAstroUrlFromInternalLink(d);return`[Embedded: ${d}](${a})`}),s.setValue(r),new i.Notice("All internal links converted for Astro.")}async loadSettings(){this.settings=Object.assign({},W,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},D=class extends i.Modal{constructor(s,t,e,r="post"){super(s);this.file=t,this.plugin=e,this.type=r}onOpen(){let{contentEl:s}=this;s.empty(),s.createEl("h2",{text:this.type==="post"?"New Blog Post":"New Page"}),s.createEl("p",{text:`Enter a title for your ${this.type}:`}),this.titleInput=s.createEl("input",{type:"text",placeholder:this.type==="post"?"My Awesome Blog Post":"My Awesome Page",cls:"astro-composer-title-input"}),this.titleInput.focus();let t=s.createDiv({cls:"astro-composer-button-container"}),e=t.createEl("button",{text:"Cancel",cls:"astro-composer-cancel-button"});e.onclick=()=>this.close();let r=t.createEl("button",{text:"Create",cls:["astro-composer-create-button","mod-cta"]});r.onclick=()=>this.createEntry(),this.titleInput.addEventListener("keypress",c=>{c.key==="Enter"&&this.createEntry()})}async createEntry(){let s=this.titleInput.value.trim();if(!s){new i.Notice("Please enter a title.");return}try{let t=await this.plugin.createFile(this.file,s,this.type);t&&this.plugin.settings.autoInsertProperties&&await this.plugin.addPropertiesToFile(t,s,this.type)}catch(t){new i.Notice(`Error creating ${this.type}: ${t.message}.`)}this.close()}onClose(){let{contentEl:s}=this;s.empty()}},M=class extends i.PluginSettingTab{constructor(s,t){super(s,t);this.autoRenameContainer=null;this.postsFolderContainer=null;this.onlyAutomateContainer=null;this.creationModeContainer=null;this.indexFileContainer=null;this.excludedDirsContainer=null;this.underscorePrefixContainer=null;this.autoInsertContainer=null;this.pagesFieldsContainer=null;this.plugin=t}display(){let{containerEl:s}=this;s.empty(),new i.Setting(s).setName("Automate post creation").setDesc("Automatically show title dialog for new .md files, rename them based on the title, and insert properties if enabled.").addToggle(t=>t.setValue(this.plugin.settings.automatePostCreation).onChange(async e=>{this.plugin.settings.automatePostCreation=e,this.plugin.settings.autoInsertProperties=e,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updateConditionalFields()})),this.autoRenameContainer=s.createDiv({cls:"auto-rename-fields"}),this.autoRenameContainer.style.display=this.plugin.settings.automatePostCreation?"block":"none",this.autoInsertContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.autoInsertContainer).setName("Auto-insert properties").setDesc("Automatically insert the properties template when creating new files (requires 'Automate post creation' to be enabled).").addToggle(t=>t.setValue(this.plugin.settings.autoInsertProperties).setDisabled(!this.plugin.settings.automatePostCreation).onChange(async e=>{this.plugin.settings.autoInsertProperties=e,await this.plugin.saveSettings()})),this.postsFolderContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.postsFolderContainer).setName("Posts folder").setDesc("Folder name for blog posts (leave blank to use the vault folder). You can specify the default location for new notes in Obsidian's 'Files and links' settings.").addText(t=>t.setPlaceholder("Enter folder path").setValue(this.plugin.settings.postsFolder).onChange(async e=>{this.plugin.settings.postsFolder=e,await this.plugin.saveSettings()})),this.onlyAutomateContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.onlyAutomateContainer).setName("Only automate in this folder").setDesc("When enabled, automation will only trigger for new .md files within the specified Posts folder and subfolders.").addToggle(t=>t.setValue(this.plugin.settings.onlyAutomateInPostsFolder).onChange(async e=>{this.plugin.settings.onlyAutomateInPostsFolder=e,await this.plugin.saveSettings(),this.updateExcludedDirsField()})),this.excludedDirsContainer=this.autoRenameContainer.createDiv({cls:"excluded-dirs-field"}),this.excludedDirsContainer.style.display=this.plugin.settings.onlyAutomateInPostsFolder?"none":"block",new i.Setting(this.excludedDirsContainer).setName("Excluded directories").setDesc("Directories to exclude from automatic post creation (e.g., pages|posts/example). Excluded directories and their child folders will be ignored. Use '|' to separate multiple directories.").addText(t=>t.setPlaceholder("pages|posts/example").setValue(this.plugin.settings.excludedDirectories).onChange(async e=>{this.plugin.settings.excludedDirectories=e,await this.plugin.saveSettings()})),this.creationModeContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.creationModeContainer).setName("Creation mode").setDesc("How to create new posts: file-based or folder-based with index.md.").addDropdown(t=>t.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(this.plugin.settings.creationMode).onChange(async e=>{this.plugin.settings.creationMode=e,await this.plugin.saveSettings(),this.updateIndexFileField()})),this.indexFileContainer=this.autoRenameContainer.createDiv({cls:"index-file-field"}),this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none",new i.Setting(this.indexFileContainer).setName("Index file name").setDesc("Name for the main file in folder-based mode (without .md extension).").addText(t=>t.setPlaceholder("index").setValue(this.plugin.settings.indexFileName).onChange(async e=>{this.plugin.settings.indexFileName=e||"index",await this.plugin.saveSettings()})),this.underscorePrefixContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.underscorePrefixContainer).setName("Use underscore prefix for drafts").setDesc("Add an underscore prefix (_post-title) to new notes by default when enabled. This hides them from Astro, which can be helpful for post drafts. Disable to skip prefixing.").addToggle(t=>t.setValue(this.plugin.settings.enableUnderscorePrefix).onChange(async e=>{this.plugin.settings.enableUnderscorePrefix=e,await this.plugin.saveSettings()})),new i.Setting(s).setName("Link base path").setDesc("Base path for converted links (e.g., /blog/, leave blank for root domain).").addText(t=>t.setPlaceholder("/blog/").setValue(this.plugin.settings.linkBasePath).onChange(async e=>{this.plugin.settings.linkBasePath=e,await this.plugin.saveSettings()})),new i.Setting(s).setName("Date format").setDesc("Format for the date in properties (e.g., YYYY-MM-DD, MMMM D, YYYY, YYYY-MM-DD HH:mm).").addText(t=>t.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dateFormat).onChange(async e=>{this.plugin.settings.dateFormat=e||"YYYY-MM-DD",await this.plugin.saveSettings()})),new i.Setting(s).setName("Properties template").addTextArea(t=>{let e=this.plugin;return t.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
tags: []
---
`).setValue(e.settings.defaultTemplate).onChange(async r=>{e.settings.defaultTemplate=r,await e.saveSettings()}),t.inputEl.classList.add("astro-composer-template-textarea"),t}).then(t=>{t.descEl.empty();let e=t.descEl.createEl("div");e.innerHTML="Used for new posts and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),new i.Setting(s).setName("Automate page creation").setDesc("Enable automatic page creation in a specified folder.").addToggle(t=>t.setValue(this.plugin.settings.enablePages).onChange(async e=>{this.plugin.settings.enablePages=e,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updatePagesFields()})),this.pagesFieldsContainer=s.createDiv(),this.pagesFieldsContainer.style.display=this.plugin.settings.enablePages?"block":"none",new i.Setting(this.pagesFieldsContainer).setName("Pages folder").setDesc("Folder for pages (leave blank to disable). Posts automation will exclude this folder.").addText(t=>t.setPlaceholder("Enter folder path").setValue(this.plugin.settings.pagesFolder).onChange(async e=>{this.plugin.settings.pagesFolder=e,await this.plugin.saveSettings()})),new i.Setting(this.pagesFieldsContainer).setName("Page properties template").addTextArea(t=>{let e=this.plugin;return t.setPlaceholder(`---
title: "{{title}}"
description: ""
---
`).setValue(e.settings.pageTemplate).onChange(async r=>{e.settings.pageTemplate=r,await e.saveSettings()}),t.inputEl.classList.add("astro-composer-template-textarea"),t}).then(t=>{t.descEl.empty();let e=t.descEl.createEl("div");e.innerHTML="Used for new pages and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),this.updateConditionalFields(),this.updateIndexFileField(),this.updateExcludedDirsField(),this.updatePagesFields()}updateConditionalFields(){this.autoRenameContainer&&(this.autoRenameContainer.style.display=this.plugin.settings.automatePostCreation?"block":"none")}updateIndexFileField(){this.indexFileContainer&&(this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none")}updateExcludedDirsField(){this.excludedDirsContainer&&(this.excludedDirsContainer.style.display=this.plugin.settings.onlyAutomateInPostsFolder?"none":"block")}updatePagesFields(){this.pagesFieldsContainer&&(this.pagesFieldsContainer.style.display=this.plugin.settings.enablePages?"block":"none")}};
