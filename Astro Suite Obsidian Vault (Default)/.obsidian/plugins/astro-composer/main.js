/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var R=Object.defineProperty;var U=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var q=(b,i)=>{for(var e in i)R(b,e,{get:i[e],enumerable:!0})},G=(b,i,e,s)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of j(i))!z.call(b,n)&&n!==e&&R(b,n,{get:()=>i[n],enumerable:!(s=U(i,n))||s.enumerable});return b};var Z=b=>G(R({},"__esModule",{value:!0}),b);var J={};q(J,{default:()=>H});module.exports=Z(J);var N=require("obsidian");var D=["tags","aliases","cssclasses"],S={DEBOUNCE_MS:500,STAT_MTIME_THRESHOLD:1e3,EDITOR_STABILIZE_DELAY:100,FILE_EXPLORER_REVEAL_DELAY:200};var K={enableUnderscorePrefix:!1,defaultTemplate:`---
title: "{{title}}"
date: {{date}}
tags: []
---
`,postsFolder:"posts",postsLinkBasePath:"blog/",automatePostCreation:!0,autoInsertProperties:!0,creationMode:"file",indexFileName:"",dateFormat:"YYYY-MM-DD",excludedDirectories:"",onlyAutomateInPostsFolder:!1,enablePages:!1,pagesFolder:"pages",pagesLinkBasePath:"",pagesCreationMode:"file",pagesIndexFileName:"",pageTemplate:`---
title: "{{title}}"
description: ""
---
`,enableCopyHeadingLink:!0,copyHeadingLinkFormat:"obsidian",addTrailingSlashToLinks:!1,customContentTypes:[]};var k=require("obsidian");var y=require("obsidian"),v=class{constructor(i,e,s){this.app=i;this.settings=e;this.plugin=s}toKebabCase(i){return i.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}generateFilename(i){let e=this.toKebabCase(i);return`${this.settings.enableUnderscorePrefix?"_":""}${e}`}determineType(i){let e=i.path;for(let a of this.settings.customContentTypes)if(a.enabled&&a.folder&&(e.startsWith(a.folder+"/")||e===a.folder))return a.id;let s=this.settings.pagesFolder||"",n=!1;if(this.settings.enablePages&&(s?n=e.startsWith(s+"/")||e===s:n=!e.includes("/")),n)return"page";let t=this.settings.postsFolder||"",r=!1;return this.settings.automatePostCreation&&(t?r=e.startsWith(t+"/")||e===t:r=!e.includes("/")),r?"post":"note"}getCustomContentType(i){return this.settings.customContentTypes.find(e=>e.id===i)||null}isCustomContentType(i){return i!=="post"&&i!=="page"}getTitleKey(i){if(i==="note")return"title";let e;if(this.isCustomContentType(i)){let t=this.getCustomContentType(i);if(!t)return"title";e=t.template}else e=i==="post"?this.settings.defaultTemplate:this.settings.pageTemplate;let s=e.split(`
`),n=!1;for(let t of s){let r=t.trim();if(r==="---"){n=!n;continue}if(n){let a=r.match(/^(\w+):\s*(.+)$/);if(a){let o=a[1];if(a[2].includes("{{title}}"))return o}}}return"title"}async createFile(i){var o,l;let{file:e,title:s,type:n}=i;if(!s)return new y.Notice(`Title is required to create a ${n}.`),null;let t=this.toKebabCase(s),r=this.settings.enableUnderscorePrefix?"_":"",a="";if(n==="note")a="";else if(this.isCustomContentType(n)){let p=this.getCustomContentType(n),d=((o=e.parent)==null?void 0:o.path)||"";d===""||d==="/"?a=p?p.folder:"":a=d}else{let p=this.settings.postsFolder||"",d=this.settings.pagesFolder||"",c=((l=e.parent)==null?void 0:l.path)||"";c===""||c==="/"?a="":a=c}return a&&(this.app.vault.getAbstractFileByPath(a)instanceof y.TFolder||await this.app.vault.createFolder(a)),this.settings.creationMode==="folder"?this.createFolderStructure(e,t,r,a,n):this.createFileStructure(e,t,r,a)}async createFolderStructure(i,e,s,n,t){let r=`${s}${e}`,a;if(n)a=`${n}/${r}`;else{let c=i.parent?i.parent.path:"";c&&c!=="/"?a=`${c}/${r}`:a=r}try{this.app.vault.getAbstractFileByPath(a)instanceof y.TFolder||await this.app.vault.createFolder(a)}catch(c){}let l=`${this.settings.indexFileName||"index"}.md`,p=`${a}/${l}`;if(this.app.vault.getAbstractFileByPath(p)instanceof y.TFile)return new y.Notice(`File already exists at ${p}.`),null;try{await this.app.vault.rename(i,p);let c=this.app.vault.getAbstractFileByPath(p);return c instanceof y.TFile?(setTimeout(()=>{let h=this.app.workspace.getLeavesOfType("file-explorer")[0];if(h&&h.view){let f=h.view.tree;f&&c instanceof y.TFile&&typeof f.revealFile=="function"&&f.revealFile(c)}},200),await this.app.workspace.getLeaf(!1).openFile(c),c):null}catch(c){return new y.Notice(`Failed to create folder structure: ${c.message}.`),null}}async createFileStructure(i,e,s,n){let t=`${s}${e}.md`,r;if(n)r=`${n}/${t}`;else{let o=i.parent?i.parent.path:"";o&&o!=="/"?r=`${o}/${t}`:r=t}let a=this.app.vault.getAbstractFileByPath(r);if(a instanceof y.TFile&&a!==i)return new y.Notice(`File with name "${t}" already exists.`),null;try{await this.app.fileManager.renameFile(i,r);let o=this.app.vault.getAbstractFileByPath(r);return o instanceof y.TFile?(this.plugin&&"pluginCreatedFiles"in this.plugin&&this.plugin.pluginCreatedFiles.add(r),await this.app.workspace.getLeaf(!1).openFile(o),o):null}catch(o){return new y.Notice(`Failed to rename file: ${o.message}.`),null}}async renameFile(i){let{file:e,title:s,type:n}=i;if(!s)return new y.Notice("Title is required to rename the content."),null;let t=this.toKebabCase(s),r="";return this.settings.creationMode==="folder"?this.renameFolderStructure(e,t,r,n):this.renameFileStructure(e,t,r)}async renameFolderStructure(i,e,s,n){let t=this.settings.indexFileName||"index";if(i.basename===t){if(!i.parent)return new y.Notice("Cannot rename: File has no parent folder."),null;s=i.parent.name.startsWith("_")?"_":"";let a=`${s}${e}`,o=i.parent.parent;if(!o)return new y.Notice("Cannot rename: Parent folder has no parent."),null;let l=`${o.path}/${a}`;if(this.app.vault.getAbstractFileByPath(l)instanceof y.TFolder)return new y.Notice(`Folder already exists at ${l}.`),null;await this.app.fileManager.renameFile(i.parent,l);let d=`${l}/${i.name}`,c=this.app.vault.getAbstractFileByPath(d);return c instanceof y.TFile?c:(new y.Notice("Failed to locate renamed file."),null)}else{if(!i.parent)return new y.Notice("Cannot rename: File has no parent folder."),null;s=i.basename.startsWith("_")?"_":"";let a=`${s}${e}.md`,o=`${i.parent.path}/${a}`,l=this.app.vault.getAbstractFileByPath(o);if(l instanceof y.TFile&&l!==i)return new y.Notice(`File already exists at ${o}.`),null;let p=i.path,d=i.name;await this.app.vault.rename(i,o);let c=this.app.vault.getAbstractFileByPath(o);return c instanceof y.TFile?c:(new y.Notice("Failed to locate renamed file."),null)}}async renameFileStructure(i,e,s){if(!i.parent)return new y.Notice("Cannot rename: File has no parent folder."),null;if(this.settings.indexFileName&&this.settings.indexFileName.trim()!==""&&i.basename===this.settings.indexFileName){s=i.parent.name.startsWith("_")?"_":"";let l=`${s}${e}`,p=i.parent.parent;if(!p)return new y.Notice("Cannot rename: Parent folder has no parent."),null;let d=`${p.path}/${l}`;if(this.app.vault.getAbstractFileByPath(d)instanceof y.TFolder)return new y.Notice(`Folder already exists at ${d}.`),null;let F=i.path,h=i.name;await this.app.fileManager.renameFile(i.parent,d);let f=`${d}/${i.name}`,m=this.app.vault.getAbstractFileByPath(f);return m instanceof y.TFile?m:(new y.Notice("Failed to locate renamed file."),null)}s=i.basename.startsWith("_")?"_":"";let t=`${s}${e}.md`,r=`${i.parent.path}/${t}`,a=this.app.vault.getAbstractFileByPath(r);if(a instanceof y.TFile&&a!==i)return new y.Notice(`File already exists at ${r}.`),null;await this.app.fileManager.renameFile(i,r);let o=this.app.vault.getAbstractFileByPath(r);return o instanceof y.TFile?o:(new y.Notice("Failed to locate renamed file."),null)}};var _=require("obsidian");var A=class{constructor(i,e){this.app=i;this.settings=e}async parseFrontmatter(i){let e=0,s="",n={};if(i.startsWith("---")){e=i.indexOf(`
---`,3),e===-1?e=i.length:e+=4,s=i.slice(4,e-4).trim();try{let r=null,a=new Set;s.split(`
`).forEach(o=>{let l=o.trim(),p=l.match(/^([a-zA-Z_][a-zA-Z0-9_-]*):\s*(.*)$/);if(p){let[,d,c]=p;r=d;let F=D.includes(d),h=!c||c.trim()===""||c.trim()==="[]";F||h?(n[d]=[],a.add(d)):n[d]=[c?c.trim():""]}else if(r&&l.startsWith("- ")){if(a.has(r)){let c=l.replace(/^-\s*/,"");c&&n[r].push(c)}}else if(l&&!l.startsWith("- ")&&!l.startsWith("#")){let d=l.match(/^([^:]+):\s*(.*)$/);if(d){let[,c,F]=d;n[c]||(n[c]=[F?F.trim():""])}}}),D.forEach(o=>{s.includes(o+":")&&!n[o]&&(n[o]=[])})}catch(r){new _.Notice("Falling back to template due to parsing error.")}}let t=i.slice(e);return{properties:n,propertiesText:s,propertiesEnd:e,bodyContent:t}}parseTemplate(i,e){let s=i.split(`
`),n=[],t={},r=!1;for(let a=0;a<s.length;a++){let o=s[a].trim();if(o==="---"){if(r=!r,!r)break;continue}if(r){let l=o.match(/^(\w+):\s*(.*)$/);if(l){let[,p,d]=l;n.push(p);let c=D.includes(p),F=!d||d.trim()===""||d.trim()==="[]";if(c||F)if(d&&d.startsWith("[")){let f=d.replace(/[[\]]/g,"").split(",").map(m=>m.trim()).filter(m=>m);t[p]=f}else{t[p]=[];for(let f=a+1;f<s.length;f++){let m=s[f].trim();if(m.startsWith("- ")){let P=m.replace(/^-\s*/,"").trim();P&&t[p].push(P)}else if(m==="---"||m&&!m.startsWith("- ")&&m.includes(":"))break}}else{let f=(d||"").replace(/\{\{title\}\}/g,e).replace(/\{\{date\}\}/g,window.moment(new Date).format(this.settings.dateFormat));t[p]=f}}}}return{templateProps:n,templateValues:t}}buildFrontmatterContent(i,e){let s=`---
`;for(let n in i)D.includes(n)||e&&e.has(n)?(s+=`${n}:
`,i[n].length>0&&i[n].forEach(r=>{s+=`  - ${r}
`})):s+=`${n}: ${i[n][0]||""}
`;return s+="---",s}async updateTitleInFrontmatter(i,e,s){let n=this.getTitleKey(s),t=await this.app.vault.read(i),r=0,a="";t.startsWith("---")&&(r=t.indexOf(`
---`,3),r===-1?r=t.length:r+=4,a=t.slice(4,r-4).trim());let o=[],l={},p=null,d=-1,c=new Set;a.split(`
`).forEach((P,w)=>{let x=P.trim(),T=x.match(/^([a-zA-Z_][a-zA-Z0-9_-]*):\s*(.*)$/);if(T){let[,g,u]=T;o.push(g),p=g,g===n&&(d=w);let $=D.includes(g),B=!u||u.trim()===""||u.trim()==="[]";$||B?(l[g]=[],c.add(g)):l[g]=u?u.trim():""}else if(p&&c.has(p)&&x.startsWith("- ")){let g=x.replace(/^-\s*/,"");g&&l[p].push(g)}else if(x&&!x.startsWith("- ")&&!x.startsWith("#")){let g=x.match(/^([^:]+):\s*(.*)$/);if(g){let[,u,$]=g;o.includes(u)||(o.push(u),l[u]=$?$.trim():"")}}});let F=e.replace(/"/g,'\\"'),h=e.includes(" ")||e.includes('"')?`"${F}"`:e;l[n]=h,d===-1&&o.push(n);let f=`---
`;for(let P of o){let w=l[P];Array.isArray(w)?(f+=`${P}:
`,w.length>0&&w.forEach(x=>{f+=`  - ${x}
`})):f+=`${P}: ${w||""}
`}f+="---";let m=t.slice(r);f+=m,await this.app.vault.modify(i,f)}getTitleKey(i){let e;if(this.isCustomContentType(i)){let t=this.getCustomContentType(i);if(!t)return"title";e=t.template}else e=i==="post"?this.settings.defaultTemplate:this.settings.pageTemplate;let s=e.split(`
`),n=!1;for(let t of s){let r=t.trim();if(r==="---"){n=!n;continue}if(n){let a=r.match(/^(\w+):\s*(.+)$/);if(a){let o=a[1];if(a[2].includes("{{title}}"))return o}}}return"title"}isCustomContentType(i){return i!=="post"&&i!=="page"}getCustomContentType(i){return this.settings.customContentTypes.find(e=>e.id===i)||null}};var L=require("obsidian"),I=class{constructor(i){this.settings=i}toKebabCase(i){return i.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}getAstroUrlFromInternalLink(i){let e=i.indexOf("#"),s=e>=0?i.slice(0,e):i,n=e>=0?i.slice(e):"";s=decodeURIComponent(s),s=s.replace(/\.md$/,"");let t="",r="",a="file",o="",l=!1;for(let m of this.settings.customContentTypes)if(m.enabled&&m.folder&&s.startsWith(m.folder+"/")){r=m.folder,t=m.linkBasePath||"",a=m.creationMode,o=m.indexFileName,l=!0;break}if(!l&&this.settings.enablePages&&this.settings.pagesFolder&&s.startsWith(this.settings.pagesFolder+"/"))r=this.settings.pagesFolder,t=this.settings.pagesLinkBasePath,a=this.settings.pagesCreationMode||"file",o=this.settings.pagesIndexFileName||"";else if(!l&&this.settings.postsFolder&&s.startsWith(this.settings.postsFolder+"/"))r=this.settings.postsFolder,t=this.settings.postsLinkBasePath,a=this.settings.creationMode,o=this.settings.indexFileName||"index";else if(!l&&!this.settings.postsFolder&&!this.settings.onlyAutomateInPostsFolder&&(!s.includes("/")||s.includes("/")&&!s.startsWith("/")&&s.split("/").length===2)){let m=!1;if(this.settings.enablePages&&this.settings.pagesFolder&&s.startsWith(this.settings.pagesFolder+"/")&&(m=!0),this.settings.excludedDirectories){let P=this.settings.excludedDirectories.split("|").map(w=>w.trim()).filter(w=>w);for(let w of P)if(s.startsWith(w+"/")||s===w){m=!0;break}}m||(t=this.settings.postsLinkBasePath,a=this.settings.creationMode,o=this.settings.indexFileName||"index")}r&&(s=s.slice(r.length+1));let p=!1,d=s.split("/"),c=d[d.length-1];(o&&o.trim()!==""&&c===o||(!o||o.trim()==="")&&c==="index")&&(d.pop(),s=d.join("/"),p=!0);let h=s.split("/").map(m=>this.toKebabCase(m)).join("/");t?(t.startsWith("/")||(t="/"+t),t.endsWith("/")||(t+="/")):t="/";let f=this.settings.addTrailingSlashToLinks||p;return`${t}${h}${f?"/":""}${n}`}getAstroUrlFromInternalLinkWithContext(i,e,s){let n=i.indexOf("#"),t=n>=0?i.slice(0,n):i,r=n>=0?i.slice(n):"";t=decodeURIComponent(t),t=t.replace(/\.md$/,"");let a="",o="",l="file",p="",d=this.getContentTypeForPath(t+".md");!d.basePath&&s.basePath?(a=s.basePath,l=s.creationMode,p=s.indexFileName):(a=d.basePath,l=d.creationMode,p=d.indexFileName);let c=t+".md";for(let x of this.settings.customContentTypes)if(x.enabled&&x.folder&&c.startsWith(x.folder+"/")){o=x.folder;break}!o&&this.settings.enablePages&&this.settings.pagesFolder&&c.startsWith(this.settings.pagesFolder+"/")&&(o=this.settings.pagesFolder),!o&&this.settings.postsFolder&&c.startsWith(this.settings.postsFolder+"/")&&(o=this.settings.postsFolder),o&&(t=t.slice(o.length+1));let F=!1,h=t.split("/"),f=h[h.length-1];(p&&p.trim()!==""&&f===p||(!p||p.trim()==="")&&f==="index")&&(h.pop(),t=h.join("/"),F=!0);let P=t.split("/").map(x=>this.toKebabCase(x)).join("/");a?(a.startsWith("/")||(a="/"+a),a.endsWith("/")||(a+="/")):a="/";let w=this.settings.addTrailingSlashToLinks||F;return`${a}${P}${w?"/":""}${r}`}getContentTypeForPath(i){for(let e of this.settings.customContentTypes)if(e.enabled&&e.folder&&i.startsWith(e.folder+"/"))return{basePath:e.linkBasePath||"",creationMode:e.creationMode,indexFileName:e.indexFileName};if(this.settings.enablePages){if(this.settings.pagesFolder&&i.startsWith(this.settings.pagesFolder+"/"))return{basePath:this.settings.pagesLinkBasePath,creationMode:this.settings.pagesCreationMode||"file",indexFileName:this.settings.pagesIndexFileName||""};if(!this.settings.pagesFolder&&!i.includes("/"))return{basePath:this.settings.pagesLinkBasePath,creationMode:this.settings.pagesCreationMode||"file",indexFileName:this.settings.pagesIndexFileName||""}}return this.settings.postsFolder&&i.startsWith(this.settings.postsFolder+"/")?{basePath:this.settings.postsLinkBasePath,creationMode:this.settings.creationMode,indexFileName:this.settings.indexFileName||"index"}:!this.settings.postsFolder&&this.settings.automatePostCreation?{basePath:this.settings.postsLinkBasePath,creationMode:this.settings.creationMode,indexFileName:this.settings.indexFileName||"index"}:{basePath:"",creationMode:"file",indexFileName:""}}async convertWikilinksForAstro(i,e){if(!(e instanceof L.TFile)){new L.Notice("No active file.");return}let n=i.getValue(),t=this.getContentTypeForPath(e.path),r=/\.(png|jpg|jpeg|gif|svg)$/i;n=n.replace(/\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(a,o,l,p)=>{if(r.test(o))return a;let d=p||o.replace(/\.md$/,""),c=this.getAstroUrlFromInternalLinkWithContext(o,e.path,t);return`[${d}](${c})`}),n=n.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(a,o,l)=>{if(l.match(/^https?:\/\//)||r.test(l)||!l.includes(".md"))return a;let p=this.getAstroUrlFromInternalLinkWithContext(l,e.path,t);return`[${o}](${p})`}),n=n.replace(/!\[(.*?)\]\(([^)]+)\)/g,a=>a),n=n.replace(/\{\{([^}]+)\}\}/g,(a,o)=>{if(r.test(o))return a;let l=this.getAstroUrlFromInternalLinkWithContext(o,e.path,t);return`[Embedded: ${o}](${l})`}),i.setValue(n),new L.Notice("All internal links converted for Astro.")}};var M=require("obsidian");var E=class extends M.Modal{constructor(e,s,n,t="post",r=!1,a=!1){super(e);this.file=s,this.plugin=n,this.type=t,this.isRename=r,this.isNewNote=a;let o=n.settings;this.fileOps=new v(e,o),this.templateParser=new A(e,o)}getCurrentTitle(){if(!this.file)return"";let e=this.fileOps.getTitleKey(this.type),s=this.app.metadataCache.getFileCache(this.file),n=this.file.basename;this.file.parent&&this.plugin.settings.indexFileName&&this.plugin.settings.indexFileName.trim()!==""&&n===this.plugin.settings.indexFileName&&(n=this.file.parent.name),n.startsWith("_")&&(n=n.slice(1));let t=n.replace(/-/g," ").split(" ").map(r=>r.charAt(0).toUpperCase()+r.slice(1)).join(" ");return s!=null&&s.frontmatter&&s.frontmatter[e]?s.frontmatter[e]:t}onOpen(){let{contentEl:e}=this;if(e.empty(),(window.innerWidth<=768||/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))&&this.modalEl.addClass("astro-composer-mobile-modal"),this.isRename){let a=this.getTypeDisplayName();this.fileOps.isCustomContentType(this.type)?(e.createEl("h2",{text:`Rename Custom Type: ${a}`}),e.createEl("p",{text:"Enter a new title for this content type:"})):this.type==="note"?(e.createEl("h2",{text:"Rename Custom Content Type"}),e.createEl("p",{text:"Enter a title for this content type:"})):(e.createEl("h2",{text:`Rename ${a}`}),e.createEl("p",{text:`Enter new title for your ${a.toLowerCase()}:`})),this.titleInput=e.createEl("input",{type:"text",placeholder:`My Renamed ${a}`,cls:"astro-composer-title-input"}),this.titleInput.value=this.getCurrentTitle()}else if(this.isNewNote){let a=this.getTypeDisplayName();this.fileOps.isCustomContentType(this.type)?(e.createEl("h2",{text:`New Custom Type: ${a}`}),e.createEl("p",{text:"Enter a title for this content type:"})):(e.createEl("h2",{text:`Create New ${a}`}),e.createEl("p",{text:`Enter a title for your new ${a.toLowerCase()}:`})),this.titleInput=e.createEl("input",{type:"text",placeholder:`My Awesome ${a}`,cls:"astro-composer-title-input"})}else{let a=this.getTypeDisplayName();this.fileOps.isCustomContentType(this.type)?(e.createEl("h2",{text:`New Custom Type: ${a}`}),e.createEl("p",{text:"Enter a title for this content type:"})):(e.createEl("h2",{text:`New ${a}`}),e.createEl("p",{text:`Enter a title for your ${a.toLowerCase()}:`})),this.titleInput=e.createEl("input",{type:"text",placeholder:`My Awesome ${a}`,cls:"astro-composer-title-input"})}this.titleInput.focus();let n=e.createDiv({cls:"astro-composer-button-container"}),t=n.createEl("button",{text:"Cancel",cls:"astro-composer-cancel-button"});t.onclick=()=>this.close();let r=n.createEl("button",{text:this.isRename?"Rename":"Create",cls:["astro-composer-create-button","mod-cta"]});r.onclick=()=>this.submit(),this.titleInput.addEventListener("keypress",a=>{a.key==="Enter"&&this.submit()})}async submit(){let e=this.titleInput.value.trim();if(!e){new M.Notice("Please enter a title.");return}try{let s=null;if(this.isRename?(s=await this.fileOps.renameFile({file:this.file,title:e,type:this.type}),s&&await this.templateParser.updateTitleInFrontmatter(s,e,this.type)):this.isNewNote?s=await this.createNewFile(e):this.file?(s=await this.fileOps.createFile({file:this.file,title:e,type:this.type}),s&&this.plugin.settings.autoInsertProperties&&await this.addPropertiesToFile(s,e,this.type)):s=await this.createNewFile(e),!s)throw new Error("Failed to process the content.")}catch(s){new M.Notice(`Error ${this.isRename?"renaming":"creating"} ${this.type}: ${s.message}.`)}this.close()}getTypeDisplayName(){if(this.fileOps.isCustomContentType(this.type)){let e=this.fileOps.getCustomContentType(this.type);return e?e.name:"Content"}return this.type==="post"?"Blog Post":"Page"}async createNewFile(e){var o,l;let s,n=((l=(o=this.file)==null?void 0:o.parent)==null?void 0:l.path)||"";if(this.fileOps.isCustomContentType(this.type)){let p=this.fileOps.getCustomContentType(this.type);n===""||n==="/"?s=(p==null?void 0:p.folder)||"":s=n}else this.type==="page"?s=this.plugin.settings.pagesFolder||n:s=this.plugin.settings.postsFolder||n;let t=this.fileOps.generateFilename(e),r=s?`${s}/${t}.md`:`${t}.md`,a="";this.plugin.settings.autoInsertProperties&&(a=await this.generateInitialContent(e));try{let p=await this.app.vault.create(r,a);return this.plugin&&"pluginCreatedFiles"in this.plugin&&this.plugin.pluginCreatedFiles.add(r),await this.app.workspace.getLeaf().openFile(p),p}catch(p){throw new Error(`Failed to create file: ${p.message}`)}}async generateInitialContent(e){let s=new Date,n=window.moment(s).format(this.plugin.settings.dateFormat),t;if(this.type==="note")t=`---
title: "${e}"
date: ${n}
---
`;else if(this.fileOps.isCustomContentType(this.type)){let r=this.fileOps.getCustomContentType(this.type);t=r?r.template:this.plugin.settings.defaultTemplate}else t=this.type==="post"?this.plugin.settings.defaultTemplate:this.plugin.settings.pageTemplate;return t=t.replace(/\{\{title\}\}/g,e),t=t.replace(/\{\{date\}\}/g,n),t}async addPropertiesToFile(e,s,n="post"){let t=new Date,r=window.moment(t).format(this.plugin.settings.dateFormat),a;if(n==="note")a=`---
title: "${s}"
date: ${r}
---
`;else if(this.fileOps.isCustomContentType(n)){let o=this.fileOps.getCustomContentType(n);a=o?o.template:this.plugin.settings.defaultTemplate}else a=n==="post"?this.plugin.settings.defaultTemplate:this.plugin.settings.pageTemplate;a=a.replace(/\{\{title\}\}/g,s),a=a.replace(/\{\{date\}\}/g,r),await this.app.vault.modify(e,a)}onClose(){let{contentEl:e}=this;e.empty()}};function Y(b,i){let e=new v(b.app,i,b),s=new I(i);function n(t,r){let a=t.path,o=r.postsFolder||"",l=r.enablePages&&r.pagesFolder||"";if(r.automatePostCreation){if(o){if(a.startsWith(o+"/")||a===o)return!0}else if(!a.includes("/")||a.includes("/")&&!a.startsWith("/")&&a.split("/").length===2)return!0}if(r.enablePages){if(l&&(a.startsWith(l+"/")||a===l))return!0;if(!l&&!a.includes("/"))return!0}let p=e.determineType(t);if(e.isCustomContentType(p)){let d=e.getCustomContentType(p);if(d&&d.enabled)return!0}return!1}b.addCommand({id:"standardize-properties",name:"Standardize Properties",icon:"file-check",editorCallback:(t,r)=>{r.file instanceof k.TFile&&X(b.app,i,r.file,b)}}),b.addCommand({id:"convert-wikilinks-astro",name:"Convert internal links for Astro",icon:"link-2",editorCallback:(t,r)=>{r.file instanceof k.TFile&&s.convertWikilinksForAstro(t,r.file)}}),b.addCommand({id:"rename-content",name:"Rename Current Content",icon:"pencil",editorCallback:(t,r)=>{if(r.file instanceof k.TFile){if(!n(r.file,i)){new k.Notice("Cannot rename: This file is not part of a configured content type folder.");return}let a=e.determineType(r.file),o=b.app.metadataCache.getFileCache(r.file),l=e.getTitleKey(a);if(!(o!=null&&o.frontmatter)||!(l in o.frontmatter)){new k.Notice(`Cannot rename: No ${l} found in properties`);return}new E(b.app,r.file,b,a,!0).open()}}})}async function X(b,i,e,s){let n=new A(b,i),t=new v(b,i,s),r=t.determineType(e),a,o=e.path,l=i.postsFolder||"",p=i.enablePages&&i.pagesFolder||"",d=!1;if(i.automatePostCreation&&(l?(o.startsWith(l+"/")||o===l)&&(d=!0):(!o.includes("/")||o.includes("/")&&!o.startsWith("/")&&o.split("/").length===2)&&(d=!0)),!d&&i.enablePages&&(p&&(o.startsWith(p+"/")||o===p)||!p&&!o.includes("/"))&&(d=!0),!d&&t.isCustomContentType(r)){let T=t.getCustomContentType(r);T&&T.enabled&&(d=!0)}if(!d){new k.Notice("No properties template specified for this content. This file doesn't match any configured content type folders.");return}if(t.isCustomContentType(r)){let T=t.getCustomContentType(r);a=T?T.template:i.defaultTemplate}else a=r==="page"?i.pageTemplate:i.defaultTemplate;await new Promise(T=>setTimeout(T,100));let c=await b.vault.read(e),F=e.basename.replace(/^_/,""),h=await n.parseFrontmatter(c),{templateProps:f,templateValues:m}=n.parseTemplate(a,F),P={...h.properties},w=new Set;for(let T of f)if(T in h.properties){let g=m[T];if(Array.isArray(g)){let $=h.properties[T]||[],B=g.filter(V=>!$.includes(V));P[T]=[...$,...B],w.add(T)}}else{let g=m[T];Array.isArray(g)?(P[T]=g,w.add(T)):P[T]=[g||""]}for(let T in h.properties)h.properties[T].length>1&&w.add(T);let x=n.buildFrontmatterContent(P,w)+h.bodyContent;await b.vault.modify(e,x),new k.Notice("Properties standardized using template.")}var C=require("obsidian"),O=class extends C.PluginSettingTab{constructor(e,s){super(e,s);this.autoRenameContainer=null;this.postsFolderContainer=null;this.onlyAutomateContainer=null;this.creationModeContainer=null;this.indexFileContainer=null;this.excludedDirsContainer=null;this.underscorePrefixContainer=null;this.autoInsertContainer=null;this.pagesFieldsContainer=null;this.pagesIndexFileContainer=null;this.copyHeadingContainer=null;this.customContentTypesContainer=null;this.plugin=s}display(){let{containerEl:e}=this;e.empty();let s=this.plugin.settings;new C.Setting(e).setName("Date format").setDesc("Format for the date in properties (e.g., YYYY-MM-DD, MMMM D, YYYY, YYYY-MM-DD HH:mm).").addText(n=>n.setPlaceholder("YYYY-MM-DD").setValue(s.dateFormat).onChange(async t=>{s.dateFormat=t||"YYYY-MM-DD",await this.plugin.saveSettings()})),new C.Setting(e).setName("Enable copy heading links").setDesc("Add right-click context menu option to copy heading links in various formats.").addToggle(n=>n.setValue(s.enableCopyHeadingLink).onChange(async t=>{s.enableCopyHeadingLink=t,await this.plugin.saveSettings(),this.updateCopyHeadingFields()})),this.copyHeadingContainer=e.createDiv({cls:"copy-heading-fields"}),this.copyHeadingContainer.style.display=s.enableCopyHeadingLink?"block":"none",new C.Setting(this.copyHeadingContainer).setName("Default heading link format").setDesc("Choose the default format for copied heading links. Obsidian format respects your Obsidian settings for wikilink vs markdown preference. Astro link uses your Link base path from above and converts the heading into kebab-case format as an anchor link.").addDropdown(n=>n.addOption("obsidian","Obsidian link").addOption("astro","Astro link").setValue(s.copyHeadingLinkFormat).onChange(async t=>{s.copyHeadingLinkFormat=t,await this.plugin.saveSettings()})),new C.Setting(e).setName("Add trailing slash to links").setDesc("Add trailing slashes to all converted internal links (e.g., /about/ instead of /about).").addToggle(n=>n.setValue(s.addTrailingSlashToLinks).onChange(async t=>{s.addTrailingSlashToLinks=t,await this.plugin.saveSettings()})),new C.Setting(e).setName("Post settings").setDesc("").setHeading(),new C.Setting(e).setName("Automate post creation").setDesc("Automatically show title dialog for new .md files, rename them based on the title, and insert properties if enabled.").addToggle(n=>n.setValue(s.automatePostCreation).onChange(async t=>{s.automatePostCreation=t,s.autoInsertProperties=t,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updateConditionalFields()})),this.autoRenameContainer=e.createDiv({cls:"auto-rename-fields"}),this.autoRenameContainer.style.display=s.automatePostCreation?"block":"none",this.autoInsertContainer=this.autoRenameContainer.createDiv(),new C.Setting(this.autoInsertContainer).setName("Auto-insert properties").setDesc("Automatically insert the properties template when creating new files (requires 'Automate post creation' to be enabled).").addToggle(n=>n.setValue(s.autoInsertProperties).setDisabled(!s.automatePostCreation).onChange(async t=>{s.autoInsertProperties=t,await this.plugin.saveSettings()})),this.postsFolderContainer=this.autoRenameContainer.createDiv(),new C.Setting(this.postsFolderContainer).setName("Posts folder").setDesc("Folder name for blog posts (leave blank to use the vault folder). You can specify the default location for new notes in Obsidian's 'Files and links' settings.").addText(n=>n.setPlaceholder("Enter folder path").setValue(s.postsFolder).onChange(async t=>{s.postsFolder=t,await this.plugin.saveSettings(),this.updateOnlyAutomateField(),this.updateExcludedDirsField()})),this.onlyAutomateContainer=this.autoRenameContainer.createDiv(),new C.Setting(this.onlyAutomateContainer).setName("Ignore subfolders").setDesc("When enabled, automation will only trigger for new .md files within the Posts folder and one level down (for folder-based posts). Files in deeper subfolders will be ignored.").addToggle(n=>n.setValue(s.onlyAutomateInPostsFolder).onChange(async t=>{s.onlyAutomateInPostsFolder=t,await this.plugin.saveSettings(),this.updateExcludedDirsField()})),this.excludedDirsContainer=this.autoRenameContainer.createDiv({cls:"excluded-dirs-field"}),this.excludedDirsContainer.style.display=s.onlyAutomateInPostsFolder?"none":"block",new C.Setting(this.excludedDirsContainer).setName("Excluded directories").setDesc("Directories to exclude from automatic post creation (e.g., pages|posts/example). Excluded directories and their child folders will be ignored. Use '|' to separate multiple directories.").addText(n=>n.setPlaceholder("pages|posts/example").setValue(s.excludedDirectories).onChange(async t=>{s.excludedDirectories=t,await this.plugin.saveSettings()})),new C.Setting(this.autoRenameContainer).setName("Posts link base path").setDesc("Base path for converted links in posts (e.g., /blog/, leave blank for root /).").addText(n=>n.setPlaceholder("/blog/").setValue(s.postsLinkBasePath).onChange(async t=>{s.postsLinkBasePath=t,await this.plugin.saveSettings()})),this.creationModeContainer=this.autoRenameContainer.createDiv(),new C.Setting(this.creationModeContainer).setName("Creation mode").setDesc("How to create new entries: file-based or folder-based with an index file.").addDropdown(n=>n.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(s.creationMode).onChange(async t=>{s.creationMode=t,await this.plugin.saveSettings(),this.updateIndexFileField()})),this.indexFileContainer=this.autoRenameContainer.createDiv({cls:"index-file-field"}),this.indexFileContainer.style.display=s.creationMode==="folder"?"block":"none",new C.Setting(this.indexFileContainer).setName("Index file name").setDesc("Name for index files in folder-based content (without .md extension). Defaults to 'index' if left blank.").addText(n=>n.setPlaceholder("index").setValue(s.indexFileName).onChange(async t=>{s.indexFileName=t,await this.plugin.saveSettings()})),this.underscorePrefixContainer=this.autoRenameContainer.createDiv(),new C.Setting(this.underscorePrefixContainer).setName("Use underscore prefix for drafts").setDesc("Add an underscore prefix (_post-title) to new notes by default when enabled. This hides them from Astro, which can be helpful for post drafts. Disable to skip prefixing.").addToggle(n=>n.setValue(s.enableUnderscorePrefix).onChange(async t=>{s.enableUnderscorePrefix=t,await this.plugin.saveSettings()})),new C.Setting(e).setName("Post properties template").addTextArea(n=>(n.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
tags: []
---
`).setValue(s.defaultTemplate).onChange(async t=>{s.defaultTemplate=t,await this.plugin.saveSettings()}),n.inputEl.classList.add("astro-composer-template-textarea"),n)).then(n=>{n.descEl.empty();let t=n.descEl.createEl("div");t.innerHTML="Used for new posts and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),new C.Setting(e).setName("Page settings").setDesc("").setHeading(),new C.Setting(e).setName("Enable pages").setDesc("Enable page content type for static pages.").addToggle(n=>n.setValue(s.enablePages).onChange(async t=>{s.enablePages=t,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updatePagesFields()})),this.pagesFieldsContainer=e.createDiv({cls:"pages-fields"}),this.pagesFieldsContainer.style.display=s.enablePages?"block":"none",new C.Setting(this.pagesFieldsContainer).setName("Pages folder").setDesc("Folder name for pages (leave blank to use the vault folder).").addText(n=>n.setPlaceholder("Enter folder path").setValue(s.pagesFolder).onChange(async t=>{s.pagesFolder=t,await this.plugin.saveSettings()})),new C.Setting(this.pagesFieldsContainer).setName("Pages link base path").setDesc("Base path for converted links in pages (e.g., /about/, leave blank for root /).").addText(n=>n.setPlaceholder("/").setValue(s.pagesLinkBasePath).onChange(async t=>{s.pagesLinkBasePath=t,await this.plugin.saveSettings()})),new C.Setting(this.pagesFieldsContainer).setName("Creation mode").setDesc("How to create new entries: file-based or folder-based with an index file.").addDropdown(n=>n.addOption("file","File-based (page-title.md)").addOption("folder","Folder-based (page-title/index.md)").setValue(s.pagesCreationMode||"file").onChange(async t=>{s.pagesCreationMode=t,await this.plugin.saveSettings(),this.updatePagesIndexFileField()})),this.pagesIndexFileContainer=this.pagesFieldsContainer.createDiv({cls:"pages-index-file-field"}),this.pagesIndexFileContainer.style.display=(s.pagesCreationMode||"file")==="folder"?"block":"none",new C.Setting(this.pagesIndexFileContainer).setName("Index file name").setDesc("Name for index files in folder-based content (without .md extension). Defaults to 'index' if left blank.").addText(n=>n.setPlaceholder("index").setValue(s.pagesIndexFileName||"").onChange(async t=>{s.pagesIndexFileName=t,await this.plugin.saveSettings()})),new C.Setting(this.pagesFieldsContainer).setName("Page properties template").setDesc("Template for new page files. Variables include {{title}} and {{date}}.").addTextArea(n=>(n.setPlaceholder(`---
title: "{{title}}"
description: ""
---
`).setValue(s.pageTemplate).onChange(async t=>{s.pageTemplate=t,await this.plugin.saveSettings()}),n.inputEl.classList.add("astro-composer-template-textarea"),n)),new C.Setting(e).setName("Custom content types").setDesc("").setHeading(),this.customContentTypesContainer=e.createDiv({cls:"custom-content-types-container"}),this.renderCustomContentTypes(),this.updateConditionalFields(),this.updateIndexFileField(),this.updateExcludedDirsField(),this.updateOnlyAutomateField(),this.updatePagesFields(),this.updateCopyHeadingFields()}updateConditionalFields(){if(this.autoRenameContainer){let e=this.plugin.settings;this.autoRenameContainer.style.display=e.automatePostCreation?"block":"none"}}updateIndexFileField(){if(this.indexFileContainer){let e=this.plugin.settings;this.indexFileContainer.style.display=e.creationMode==="folder"?"block":"none"}}updateOnlyAutomateField(){if(this.onlyAutomateContainer){let e=this.plugin.settings;this.onlyAutomateContainer.style.display=e.postsFolder?"block":"none"}}updateExcludedDirsField(){if(this.excludedDirsContainer){let e=this.plugin.settings;this.excludedDirsContainer.style.display=e.postsFolder&&!e.onlyAutomateInPostsFolder?"block":"none"}}updatePagesFields(){if(this.pagesFieldsContainer){let e=this.plugin.settings;this.pagesFieldsContainer.style.display=e.enablePages?"block":"none"}}updateCopyHeadingFields(){if(this.copyHeadingContainer){let e=this.plugin.settings;this.copyHeadingContainer.style.display=e.enableCopyHeadingLink?"block":"none"}}checkForFolderConflicts(){let e=this.plugin.settings,s=[],n={};!e.postsFolder&&e.automatePostCreation?s.push("Posts"):e.postsFolder&&e.automatePostCreation&&(n[e.postsFolder]||(n[e.postsFolder]=[]),n[e.postsFolder].push("Posts")),!e.pagesFolder&&e.enablePages?s.push("Pages"):e.pagesFolder&&e.enablePages&&(n[e.pagesFolder]||(n[e.pagesFolder]=[]),n[e.pagesFolder].push("Pages"));for(let a of e.customContentTypes)a.enabled&&(a.folder?(n[a.folder]||(n[a.folder]=[]),n[a.folder].push(a.name||"Custom Content")):s.push(a.name||"Custom Content"));let t=!1,r="";s.length>1&&(t=!0,r+=`Multiple content types are set to use the vault root: <strong>${s.join(", ")}</strong><br><br>`);for(let[a,o]of Object.entries(n))o.length>1&&(t=!0,r+=`Multiple content types are set to use the same folder "${a}": <strong>${o.join(", ")}</strong><br><br>`)}addCustomContentType(){let e=this.plugin.settings,s={id:`custom-${Date.now()}`,name:`Custom ${e.customContentTypes.length+1}`,folder:"",linkBasePath:"",template:`---
title: "{{title}}"
date: {{date}}
---
`,enabled:!0,creationMode:"file",indexFileName:""};e.customContentTypes.push(s),this.plugin.saveSettings(),this.renderCustomContentTypes(),this.plugin.registerCreateEvent()}renderCustomContentTypes(){if(!this.customContentTypesContainer)return;this.customContentTypesContainer.empty(),this.plugin.settings.customContentTypes.forEach((t,r)=>{if(!this.customContentTypesContainer)return;let a=this.customContentTypesContainer.createDiv({cls:"custom-content-type-item",attr:{"data-type-id":t.id}}),o=a.createDiv({cls:"custom-content-type-header"});o.style.display="flex",o.style.justifyContent="space-between",o.style.alignItems="center",o.style.padding="8px 0",o.createDiv().createEl("div",{text:`Custom ${r+1}`,cls:"setting-item-name"});let p=o.createDiv({cls:"checkbox-container"});t.enabled&&p.classList.add("is-enabled");let d=p.createEl("input",{type:"checkbox",cls:"checkbox-input"});d.checked=t.enabled,p.addEventListener("click",async g=>{g.preventDefault();let u=!t.enabled;t.enabled=u,d.checked=u,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),u?p.classList.add("is-enabled"):p.classList.remove("is-enabled"),this.updateCustomContentTypeVisibility(t.id,u)}),d.addEventListener("change",async g=>{let u=g.target.checked;t.enabled=u,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),u?p.classList.add("is-enabled"):p.classList.remove("is-enabled"),this.updateCustomContentTypeVisibility(t.id,u)});let c=a.createDiv({cls:"custom-content-type-settings",attr:{"data-type-id":t.id}}),F=c.createDiv();new C.Setting(F).setName("Content type name").setDesc("Display name for this content type (e.g., 'Projects', 'Notes', 'Tutorials')").addText(g=>{g.setPlaceholder("Enter content type name").setValue(t.name).onChange(async u=>{t.name=u,await this.plugin.saveSettings()})});let h=c.createDiv();new C.Setting(h).setName("Folder location").setDesc("Folder path where this content type will be created (e.g., 'projects', 'notes/tutorials')").addText(g=>{g.setPlaceholder("Enter folder path").setValue(t.folder).onChange(async u=>{t.folder=u,await this.plugin.saveSettings(),this.plugin.registerCreateEvent()})});let f=c.createDiv();new C.Setting(f).setName("Link base path").setDesc("Base path for converted links (e.g., '/projects/', '/notes/tutorials/', leave blank for root /).").addText(g=>{g.setPlaceholder("Enter link base path").setValue(t.linkBasePath||"").onChange(async u=>{t.linkBasePath=u,await this.plugin.saveSettings()})});let m=c.createDiv();new C.Setting(m).setName("Creation mode").setDesc("How to create new entries: file-based or folder-based with an index file.").addDropdown(g=>g.addOption("file","File-based (content-title.md)").addOption("folder","Folder-based (content-title/index.md)").setValue(t.creationMode).onChange(async u=>{t.creationMode=u,await this.plugin.saveSettings(),this.updateCustomContentTypeIndexFileField(t.id)}));let P=c.createDiv({cls:"custom-index-file-field"});P.style.display=t.creationMode==="folder"?"block":"none",new C.Setting(P).setName("Index file name").setDesc("Name for index files in folder-based content (without .md extension). Defaults to 'index' if left blank.").addText(g=>g.setPlaceholder("index").setValue(t.indexFileName).onChange(async u=>{t.indexFileName=u,await this.plugin.saveSettings()}));let w=c.createDiv();new C.Setting(w).setName("Properties template").addTextArea(g=>(g.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
---
`).setValue(t.template).onChange(async u=>{t.template=u,await this.plugin.saveSettings()}),g.inputEl.classList.add("astro-composer-template-textarea"),g)).then(g=>{g.descEl.empty();let u=g.descEl.createEl("div");u.innerHTML="Template for new files of this content type.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string."});let x=c.createDiv(),T=new C.Setting(x).setName("").addButton(g=>{g.setButtonText("Remove").setWarning().onClick(()=>{this.removeCustomContentType(t.id)})});T.settingEl.style.borderTop="none",this.updateCustomContentTypeVisibility(t.id,t.enabled)});let s=this.customContentTypesContainer.createDiv(),n=new C.Setting(s).setName("").addButton(t=>{t.setButtonText("Add custom content type").setCta().onClick(()=>{this.addCustomContentType()})});n.settingEl.style.borderTop="none"}updateCustomContentTypeVisibility(e,s){var t;let n=(t=this.customContentTypesContainer)==null?void 0:t.querySelector(`[data-type-id="${e}"].custom-content-type-settings`);n&&(n.style.display=s?"block":"none")}updateCustomContentTypeIndexFileField(e){var t;let s=this.plugin.settings.customContentTypes.find(r=>r.id===e);if(!s)return;let n=(t=this.customContentTypesContainer)==null?void 0:t.querySelector(`[data-type-id="${e}"] .custom-index-file-field`);n&&(n.style.display=s.creationMode==="folder"?"block":"none")}updatePagesIndexFileField(){this.pagesIndexFileContainer&&(this.pagesIndexFileContainer.style.display=this.plugin.settings.pagesCreationMode==="folder"?"block":"none")}removeCustomContentType(e){let s=this.plugin.settings;s.customContentTypes=s.customContentTypes.filter(n=>n.id!==e),this.plugin.saveSettings(),this.renderCustomContentTypes(),this.plugin.registerCreateEvent()}};var W=class{constructor(i){this.settings=i}toKebabCase(i){return i.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}getAstroUrlFromInternalLink(i){let e=i.indexOf("#"),s=e>=0?i.slice(0,e):i,n=e>=0?i.slice(e):"";s=s.replace(/\.md$/,"");let t="",r="",a="file",o="",l=!1;for(let h of this.settings.customContentTypes)if(h.enabled&&h.folder&&s.startsWith(h.folder+"/")){r=h.folder,t=h.linkBasePath||"",a=h.creationMode,o=h.indexFileName,l=!0;break}!l&&this.settings.enablePages&&this.settings.pagesFolder&&s.startsWith(this.settings.pagesFolder+"/")?(r=this.settings.pagesFolder,t=this.settings.pagesLinkBasePath,a=this.settings.pagesCreationMode||"file",o=this.settings.pagesIndexFileName||""):!l&&this.settings.postsFolder&&s.startsWith(this.settings.postsFolder+"/")?(r=this.settings.postsFolder,t=this.settings.postsLinkBasePath,a=this.settings.creationMode,o=this.settings.indexFileName||"index"):!l&&!this.settings.postsFolder&&this.settings.automatePostCreation&&!this.settings.onlyAutomateInPostsFolder&&(t=this.settings.postsLinkBasePath,a=this.settings.creationMode,o=this.settings.indexFileName||"index"),r&&(s=s.slice(r.length+1));let p=!1;if(o&&o.trim()!==""){let h=s.split("/");h[h.length-1]===o&&(h.pop(),s=h.join("/"),p=!0)}else if(a==="folder"){let h="index",f=s.split("/");f[f.length-1]===h&&(f.pop(),s=f.join("/"),p=!0)}let c=s.split("/").map(h=>this.toKebabCase(h)).join("/");t&&(t.startsWith("/")||(t="/"+t),t.endsWith("/")||(t+="/"));let F=this.settings.addTrailingSlashToLinks||p;return`${t}${c}${F?"/":""}${n}`}generateObsidianLink(i,e,s){let n=s.heading;if(i.fileManager.generateMarkdownLink(e,"","").startsWith("[["))return`[[${e.path.replace(/\.md$/,"")}#${n}|${n}]]`;{let r=this.toKebabCase(n),a=i.fileManager.generateMarkdownLink(e,"","");if(a.startsWith("[["))return`[[${e.path.replace(/\.md$/,"")}#${n}|${n}]]`;{let o=a.match(/\[([^\]]+)\]\(([^)]+)\)/);if(o){let[,,l]=o;return`[${n}](${l}#${encodeURIComponent(r)})`}else{let l=encodeURIComponent(e.name);return`[${n}](${l}#${encodeURIComponent(r)})`}}}}generateObsidianWikilink(i,e){let s=e.heading;return`[[${i.path.replace(/\.md$/,"")}#${s}|${s}]]`}generateAstroLink(i,e){let s=e.heading,n=this.toKebabCase(s),t=`${i.path}#${n}`,r=this.getAstroUrlFromInternalLink(t);return`[${s}](${r})`}generateAstroWikilink(i,e){let s=e.heading,n=this.toKebabCase(s),t=`${i.path}#${n}`,r=this.getAstroUrlFromInternalLink(t);return`[[${s}|${r}]]`}generateLink(i,e,s){return this.settings.copyHeadingLinkFormat==="astro"?this.generateAstroLink(e,s):this.generateObsidianLink(i,e,s)}findHeadingAtLine(i,e,s){let n=i.metadataCache.getFileCache(e);if(!n||!n.headings)return null;for(let t=n.headings.length-1;t>=0;t--){let r=n.headings[t];if(r.position.start.line<=s)return r}return null}};var H=class extends N.Plugin{constructor(){super(...arguments);this.pluginCreatedFiles=new Set}async onload(){await this.loadSettings(),this.fileOps=new v(this.app,this.settings,this),this.templateParser=new A(this.app,this.settings),this.headingLinkGenerator=new W(this.settings),this.app.workspace.onLayoutReady(()=>{this.registerCreateEvent()}),Y(this,this.settings),this.addSettingTab(new O(this.app,this)),this.registerContextMenu()}registerCreateEvent(){this.createEvent&&this.app.vault.off("create",this.createEvent);let e=this.settings.customContentTypes.some(n=>n.enabled);if(this.settings.automatePostCreation||this.settings.enablePages||e){let n=0;this.createEvent=async t=>{var a;let r=Date.now();if(!(r-n<S.DEBOUNCE_MS)&&(n=r,t instanceof N.TFile&&t.extension==="md")){let o=t.path;if(this.pluginCreatedFiles.has(o)){this.pluginCreatedFiles.delete(o);return}let l=this.settings.postsFolder||"",p=this.settings.enablePages&&this.settings.pagesFolder||"",d=!1,c=null,F=!1,h=!1;if(l&&this.settings.excludedDirectories){let g=this.settings.excludedDirectories.split("|").map(u=>u.trim()).filter(u=>u);for(let u of g)if(o===u||o.startsWith(u+"/")){h=!0;break}}if(h)return;let f=((a=t.parent)==null?void 0:a.path)||"",m=f===""||f==="/",P=[];this.settings.automatePostCreation&&(!l&&m||l&&(o.startsWith(l+"/")||o===l))&&P.push("Posts"),this.settings.enablePages&&(!p&&m||p&&(o.startsWith(p+"/")||o===p))&&P.push("Pages");for(let g of this.settings.customContentTypes)g.enabled&&(!g.folder&&m||g.folder&&(o.startsWith(g.folder+"/")||o===g.folder))&&P.push(g.name||"Custom Content");if(P.length>1){new N.Notice(`\u26A0\uFE0F Folder conflict detected! Multiple content types (${P.join(", ")}) would process this file. Please specify different folders in settings.`);return}for(let g of this.settings.customContentTypes)if(g.enabled){if(g.folder&&(o.startsWith(g.folder+"/")||o===g.folder)){c=g.id,F=!0;break}else if(!g.folder){c=g.id,F=!0;break}}if(c||(p&&(o.startsWith(p+"/")||o===p)||!p&&this.settings.enablePages&&m)&&(d=!0,F=!0),!F&&this.settings.automatePostCreation)if(l)if(this.settings.onlyAutomateInPostsFolder){let g=o.split("/").length,u=l.split("/").length;(o.startsWith(l+"/")||o===l)&&g<=u+1&&(F=!0)}else(o.startsWith(l+"/")||o===l)&&(F=!0);else F=!0;if(!F)return;let w=await this.app.vault.adapter.stat(t.path);if(!((w==null?void 0:w.mtime)&&r-w.mtime<S.STAT_MTIME_THRESHOLD))return;let T=this.app.metadataCache.getFileCache(t);if(T!=null&&T.frontmatter){let g=Object.keys(T.frontmatter);if(g.length>1||!g.includes("title"))return}c?new E(this.app,t,this,c).open():d?new E(this.app,t,this,"page").open():new E(this.app,t,this,"post").open()}},this.registerEvent(this.app.vault.on("create",this.createEvent))}}async loadSettings(){this.settings=Object.assign({},K,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}registerContextMenu(){this.registerEvent(this.app.workspace.on("editor-menu",(e,s,n)=>{if(!this.settings.enableCopyHeadingLink)return;let t=s.getCursor(),r=n.file;if(!(r instanceof N.TFile))return;let a=this.headingLinkGenerator.findHeadingAtLine(this.app,r,t.line);a&&e.addItem(o=>{o.setTitle("Copy Heading Link").setIcon("link-2").onClick(async()=>{let l=this.headingLinkGenerator.generateLink(this.app,r,a);await navigator.clipboard.writeText(l),new N.Notice("Heading link copied to clipboard")})})}))}};
