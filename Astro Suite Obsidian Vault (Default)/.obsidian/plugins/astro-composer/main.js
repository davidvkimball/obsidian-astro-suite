/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var M=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var Y=Object.prototype.hasOwnProperty;var _=(m,n)=>{for(var s in n)M(m,s,{get:n[s],enumerable:!0})},B=(m,n,s,e)=>{if(n&&typeof n=="object"||typeof n=="function")for(let t of V(n))!Y.call(m,t)&&t!==s&&M(m,t,{get:()=>n[t],enumerable:!(e=L(n,t))||e.enumerable});return m};var W=m=>B(M({},"__esModule",{value:!0}),m);var K={};_(K,{default:()=>N});module.exports=W(K);var k=require("obsidian");var C=["tags","aliases","cssclasses"],S={DEBOUNCE_MS:500,STAT_MTIME_THRESHOLD:1e3,EDITOR_STABILIZE_DELAY:100,FILE_EXPLORER_REVEAL_DELAY:200};var I={enableUnderscorePrefix:!1,defaultTemplate:`---
title: "{{title}}"
date: {{date}}
tags: []
---
`,linkBasePath:"/blog/",postsFolder:"posts",automatePostCreation:!0,autoInsertProperties:!0,creationMode:"file",indexFileName:"index",dateFormat:"YYYY-MM-DD",excludedDirectories:"",onlyAutomateInPostsFolder:!1,enablePages:!1,pagesFolder:"pages",pageTemplate:`---
title: "{{title}}"
description: ""
---
`};var v=require("obsidian");var c=require("obsidian"),T=class{constructor(n,s){this.app=n;this.settings=s}toKebabCase(n){return n.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}determineType(n){let s=n.path,e=this.settings.pagesFolder||"";return this.settings.enablePages&&e&&(s.startsWith(e+"/")||s===e)?"page":"post"}getTitleKey(n){let e=(n==="post"?this.settings.defaultTemplate:this.settings.pageTemplate).split(`
`),t=!1;for(let i of e){let r=i.trim();if(r==="---"){t=!t;continue}if(t){let a=r.match(/^(\w+):\s*(.+)$/);if(a){let o=a[1];if(a[2].includes("{{title}}"))return o}}}return"title"}async createFile(n){let{file:s,title:e,type:t}=n;if(!e)return new c.Notice(`Title is required to create a ${t}.`),null;let i=this.toKebabCase(e),r=this.settings.enableUnderscorePrefix?"_":"",a=t==="post"?this.settings.postsFolder||"":this.settings.pagesFolder||"";return a&&(this.app.vault.getAbstractFileByPath(a)instanceof c.TFolder||await this.app.vault.createFolder(a)),this.settings.creationMode==="folder"?this.createFolderStructure(s,i,r,a,t):this.createFileStructure(s,i,r,a)}async createFolderStructure(n,s,e,t,i){let r=`${e}${s}`,a=t?`${t}/${r}`:r;try{this.app.vault.getAbstractFileByPath(a)instanceof c.TFolder||await this.app.vault.createFolder(a)}catch(d){}let o=`${this.settings.indexFileName}.md`,l=`${a}/${o}`;if(this.app.vault.getAbstractFileByPath(l)instanceof c.TFile)return new c.Notice(`File already exists at ${l}.`),null;try{await this.app.vault.rename(n,l);let d=this.app.vault.getAbstractFileByPath(l);return d instanceof c.TFile?(setTimeout(()=>{let h=this.app.workspace.getLeavesOfType("file-explorer")[0];if(h&&h.view){let y=h.view.tree;y&&d instanceof c.TFile&&y.revealFile(d)}},200),await this.app.workspace.getLeaf(!1).openFile(d),d):null}catch(d){return new c.Notice(`Failed to create folder structure: ${d.message}.`),null}}async createFileStructure(n,s,e,t){let i=`${e}${s}.md`,r=t?`${t}/${i}`:i,a=this.app.vault.getAbstractFileByPath(r);if(a instanceof c.TFile&&a!==n)return new c.Notice(`File with name "${i}" already exists.`),null;try{await this.app.vault.rename(n,r);let o=this.app.vault.getAbstractFileByPath(r);return o instanceof c.TFile?(await this.app.workspace.getLeaf(!1).openFile(o),o):null}catch(o){return new c.Notice(`Failed to rename file: ${o.message}.`),null}}async renameFile(n){let{file:s,title:e,type:t}=n;if(!e)return new c.Notice("Title is required to rename the note."),null;let i=this.toKebabCase(e),r="";return this.settings.creationMode==="folder"?this.renameFolderStructure(s,i,r,t):this.renameFileStructure(s,i,r)}async renameFolderStructure(n,s,e,t){if(n.basename===this.settings.indexFileName){if(!n.parent)return new c.Notice("Cannot rename: File has no parent folder."),null;e=n.parent.name.startsWith("_")?"_":"";let r=`${e}${s}`,a=n.parent.parent;if(!a)return new c.Notice("Cannot rename: Parent folder has no parent."),null;let o=`${a.path}/${r}`;if(this.app.vault.getAbstractFileByPath(o)instanceof c.TFolder)return new c.Notice(`Folder already exists at ${o}.`),null;await this.app.vault.rename(n.parent,o);let p=`${o}/${n.name}`,d=this.app.vault.getAbstractFileByPath(p);return d instanceof c.TFile?d:(new c.Notice("Failed to locate renamed file."),null)}else{if(!n.parent)return new c.Notice("Cannot rename: File has no parent folder."),null;e=n.basename.startsWith("_")?"_":"";let r=`${e}${s}.md`,a=`${n.parent.path}/${r}`,o=this.app.vault.getAbstractFileByPath(a);if(o instanceof c.TFile&&o!==n)return new c.Notice(`File already exists at ${a}.`),null;await this.app.vault.rename(n,a);let l=this.app.vault.getAbstractFileByPath(a);return l instanceof c.TFile?l:(new c.Notice("Failed to locate renamed file."),null)}}async renameFileStructure(n,s,e){if(!n.parent)return new c.Notice("Cannot rename: File has no parent folder."),null;e=n.basename.startsWith("_")?"_":"";let t=`${e}${s}.md`,i=`${n.parent.path}/${t}`,r=this.app.vault.getAbstractFileByPath(i);if(r instanceof c.TFile&&r!==n)return new c.Notice(`File already exists at ${i}.`),null;await this.app.vault.rename(n,i);let a=this.app.vault.getAbstractFileByPath(i);return a instanceof c.TFile?a:(new c.Notice("Failed to locate renamed file."),null)}};var O=require("obsidian");var P=class{constructor(n,s){this.app=n;this.settings=s}async parseFrontmatter(n){let s=0,e="",t={};if(n.startsWith("---")){s=n.indexOf(`
---`,3),s===-1?s=n.length:s+=4,e=n.slice(4,s-4).trim();try{let r=null;e.split(`
`).forEach(a=>{let o=a.match(/^(\w+):\s*(.+)?$/);if(o){let[,l,p]=o;r=l,C.includes(l)?t[l]=[]:t[l]=[p?p.trim():""]}else if(r&&C.includes(r)&&a.trim().startsWith("- ")){let l=a.trim().replace(/^-\s*/,"");l&&t[r].push(l)}else if(a.trim()&&!a.trim().startsWith("- ")){let l=a.match(/^(\w+):/);if(l){let p=l[1],d=a.slice(a.indexOf(":")+1).trim();t[p]||(t[p]=[d||""])}}}),C.forEach(a=>{e.includes(a+":")&&!t[a]&&(t[a]=[])})}catch(r){new O.Notice("Falling back to template due to parsing error.")}}let i=n.slice(s);return{properties:t,propertiesText:e,propertiesEnd:s,bodyContent:i}}parseTemplate(n,s){let e=n.split(`
`),t=[],i={},r=!1;for(let a=0;a<e.length;a++){let o=e[a].trim();if(o==="---"){if(r=!r,!r)break;continue}if(r){let l=o.match(/^(\w+):\s*(.+)?$/);if(l){let[,p,d]=l;if(t.push(p),C.includes(p))if(d&&d.startsWith("[")){let f=d.replace(/[\[\]]/g,"").split(",").map(h=>h.trim()).filter(h=>h);i[p]=f}else{i[p]=[];for(let f=a+1;f<e.length;f++){let h=e[f].trim();if(h.startsWith("- ")){let y=h.replace(/^-\s*/,"").trim();y&&i[p].push(y)}else if(h==="---")break}}else i[p]=[(d||"").replace(/\{\{title\}\}/g,s).replace(/\{\{date\}\}/g,window.moment(new Date).format(this.settings.dateFormat))]}}}return{templateProps:t,templateValues:i}}buildFrontmatterContent(n){let s=`---
`;for(let e in n)C.includes(e)?(s+=`${e}:
`,n[e].length>0&&n[e].forEach(t=>{s+=`  - ${t}
`})):s+=`${e}: ${n[e][0]||""}
`;return s+="---",s}async updateTitleInFrontmatter(n,s,e){let t=this.getTitleKey(e),i=await this.app.vault.read(n),r=0,a="";i.startsWith("---")&&(r=i.indexOf(`
---`,3),r===-1?r=i.length:r+=4,a=i.slice(4,r-4).trim());let o=[],l={},p=null;a.split(`
`).forEach(w=>{let u=w.match(/^(\w+):\s*(.+)?$/);if(u){let[,F,A]=u;o.push(F),p=F,C.includes(F)?l[F]=[]:l[F]=A?A.trim():""}else if(p&&C.includes(p)&&w.trim().startsWith("- ")){let F=w.trim().replace(/^-\s*/,"");F&&l[p].push(F)}});let d=s.replace(/"/g,'\\"'),f=s.includes(" ")||s.includes('"')?`"${d}"`:s;l[t]=f,o.includes(t)||o.push(t);let h=`---
`;for(let w of o){let u=l[w];Array.isArray(u)?(h+=`${w}:
`,u.length>0&&u.forEach(F=>{h+=`  - ${F}
`})):h+=`${w}: ${u||""}
`}h+="---";let y=i.slice(r);h+=y,await this.app.vault.modify(n,h)}getTitleKey(n){let e=(n==="post"?this.settings.defaultTemplate:this.settings.pageTemplate).split(`
`),t=!1;for(let i of e){let r=i.trim();if(r==="---"){t=!t;continue}if(t){let a=r.match(/^(\w+):\s*(.+)$/);if(a){let o=a[1];if(a[2].includes("{{title}}"))return o}}}return"title"}};var x=require("obsidian"),D=class{constructor(n){this.settings=n}toKebabCase(n){return n.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}getAstroUrlFromInternalLink(n){let s=n.indexOf("#"),e=s>=0?n.slice(0,s):n,t=s>=0?n.slice(s):"";e=e.replace(/\.md$/,""),e.startsWith(this.settings.postsFolder+"/")?e=e.slice(this.settings.postsFolder.length+1):this.settings.enablePages&&e.startsWith(this.settings.pagesFolder+"/")&&(e=e.slice(this.settings.pagesFolder.length+1));let i=!1;if(this.settings.creationMode==="folder"){let l=e.split("/");l[l.length-1]===this.settings.indexFileName&&(l.pop(),e=l.join("/"),i=!0)}let a=e.split("/").map(l=>this.toKebabCase(l)).join("/"),o=this.settings.linkBasePath;return o.startsWith("/")||(o="/"+o),o.endsWith("/")||(o+="/"),`${o}${a}${i?"/":""}${t}`}async convertWikilinksForAstro(n,s){if(!(s instanceof x.TFile)){new x.Notice("No active file.");return}let t=n.getValue(),i=/\.(png|jpg|jpeg|gif|svg)$/i;t=t.replace(/\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(r,a,o,l)=>{if(i.test(a))return r;let p=l||a.replace(/\.md$/,""),d=this.getAstroUrlFromInternalLink(a);return`[${p}](${d})`}),t=t.replace(/\[([^\]]+)\]\(([^)]+)\)/g,(r,a,o)=>{if(o.match(/^https?:\/\//)||i.test(o)||!o.includes(".md"))return r;let l=this.getAstroUrlFromInternalLink(o);return`[${a}](${l})`}),t=t.replace(/!\[(.*?)\]\(([^)]+)\)/g,r=>r),t=t.replace(/\{\{([^}]+)\}\}/g,(r,a)=>{if(i.test(a))return r;let o=this.getAstroUrlFromInternalLink(a);return`[Embedded: ${a}](${o})`}),n.setValue(t),new x.Notice("All internal links converted for Astro.")}};var E=require("obsidian");var b=class extends E.Modal{constructor(s,e,t,i="post",r=!1){super(s);this.file=e,this.plugin=t,this.type=i,this.isRename=r;let a=t.settings;this.fileOps=new T(s,a),this.templateParser=new P(s,a)}getCurrentTitle(){let s=this.fileOps.getTitleKey(this.type),e=this.app.metadataCache.getFileCache(this.file),t=this.file.basename;this.file.parent&&t===this.plugin.settings.indexFileName&&(t=this.file.parent.name),t.startsWith("_")&&(t=t.slice(1));let i=t.replace(/-/g," ").split(" ").map(r=>r.charAt(0).toUpperCase()+r.slice(1)).join(" ");return e!=null&&e.frontmatter&&e.frontmatter[s]?e.frontmatter[s]:i}onOpen(){let{contentEl:s}=this;s.empty(),this.isRename?(s.createEl("h2",{text:"Rename Note"}),s.createEl("p",{text:"Enter new title for your note:"}),this.titleInput=s.createEl("input",{type:"text",placeholder:"My Renamed Note",cls:"astro-composer-title-input"}),this.titleInput.value=this.getCurrentTitle()):(s.createEl("h2",{text:this.type==="post"?"New Blog Post":"New Page"}),s.createEl("p",{text:`Enter a title for your ${this.type}:`}),this.titleInput=s.createEl("input",{type:"text",placeholder:this.type==="post"?"My Awesome Blog Post":"My Awesome Page",cls:"astro-composer-title-input"})),this.titleInput.focus();let e=s.createDiv({cls:"astro-composer-button-container"}),t=e.createEl("button",{text:"Cancel",cls:"astro-composer-cancel-button"});t.onclick=()=>this.close();let i=e.createEl("button",{text:this.isRename?"Rename":"Create",cls:["astro-composer-create-button","mod-cta"]});i.onclick=()=>this.submit(),this.titleInput.addEventListener("keypress",r=>{r.key==="Enter"&&this.submit()})}async submit(){let s=this.titleInput.value.trim();if(!s){new E.Notice("Please enter a title.");return}try{let e=null;if(this.isRename?(e=await this.fileOps.renameFile({file:this.file,title:s,type:this.type}),e&&await this.templateParser.updateTitleInFrontmatter(e,s,this.type)):(e=await this.fileOps.createFile({file:this.file,title:s,type:this.type}),e&&this.plugin.settings.autoInsertProperties&&await this.addPropertiesToFile(e,s,this.type)),!e)throw new Error("Failed to process the note.")}catch(e){new E.Notice(`Error ${this.isRename?"renaming":"creating"} ${this.type}: ${e.message}.`)}this.close()}async addPropertiesToFile(s,e,t="post"){let i=new Date,r=window.moment(i).format(this.plugin.settings.dateFormat),a=t==="post"?this.plugin.settings.defaultTemplate:this.plugin.settings.pageTemplate;a=a.replace(/\{\{title\}\}/g,e),a=a.replace(/\{\{date\}\}/g,r),await this.app.vault.modify(s,a)}onClose(){let{contentEl:s}=this;s.empty()}};function R(m,n){let s=new T(m.app,n),e=new P(m.app,n),t=new D(n);m.addCommand({id:"standardize-properties",name:"Standardize Properties",icon:"file-check",editorCallback:(i,r)=>{r.file instanceof v.TFile&&H(m.app,n,r.file)}}),m.addCommand({id:"convert-wikilinks-astro",name:"Convert internal links for Astro",icon:"link-2",editorCallback:(i,r)=>{r.file instanceof v.TFile&&t.convertWikilinksForAstro(i,r.file)}}),m.addCommand({id:"rename-note",name:"Rename Current Note",icon:"pencil",editorCallback:(i,r)=>{if(r.file instanceof v.TFile){let a=s.determineType(r.file),o=s.getTitleKey(a),l=m.app.metadataCache.getFileCache(r.file);if(!(l!=null&&l.frontmatter)||!(o in l.frontmatter)){new v.Notice("Cannot rename: No title found in properties");return}new b(m.app,r.file,m,a,!0).open()}}})}async function H(m,n,s){var w;let e=new P(m,n),t=s.path,i=n.pagesFolder||"",a=n.enablePages&&i&&(t.startsWith(i+"/")||t===i)?n.pageTemplate:n.defaultTemplate;await new Promise(u=>setTimeout(u,100));let o=await m.vault.read(s),l=s.basename.replace(/^_/,""),p=await e.parseFrontmatter(o),{templateProps:d,templateValues:f}=e.parseTemplate(a,l),h={...p.properties};for(let u of d)if(!(u in p.properties))h[u]=f[u]||(["tags","aliases","cssclasses"].includes(u)?[]:[""]);else if(["tags","aliases","cssclasses"].includes(u)&&((w=f[u])==null?void 0:w.length)>0){let F=[...p.properties[u]||[],...f[u].filter(A=>!(p.properties[u]||[]).includes(A))];h[u]=F}let y=e.buildFrontmatterContent(h)+p.bodyContent;await m.vault.modify(s,y),new v.Notice("Properties standardized using template.")}var g=require("obsidian"),$=class extends g.PluginSettingTab{constructor(s,e){super(s,e);this.autoRenameContainer=null;this.postsFolderContainer=null;this.onlyAutomateContainer=null;this.creationModeContainer=null;this.indexFileContainer=null;this.excludedDirsContainer=null;this.underscorePrefixContainer=null;this.autoInsertContainer=null;this.pagesFieldsContainer=null;this.plugin=e}display(){let{containerEl:s}=this;s.empty();let e=this.plugin.settings;new g.Setting(s).setName("Automate post creation").setDesc("Automatically show title dialog for new .md files, rename them based on the title, and insert properties if enabled.").addToggle(t=>t.setValue(e.automatePostCreation).onChange(async i=>{e.automatePostCreation=i,e.autoInsertProperties=i,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updateConditionalFields()})),this.autoRenameContainer=s.createDiv({cls:"auto-rename-fields"}),this.autoRenameContainer.style.display=e.automatePostCreation?"block":"none",this.autoInsertContainer=this.autoRenameContainer.createDiv(),new g.Setting(this.autoInsertContainer).setName("Auto-insert properties").setDesc("Automatically insert the properties template when creating new files (requires 'Automate post creation' to be enabled).").addToggle(t=>t.setValue(e.autoInsertProperties).setDisabled(!e.automatePostCreation).onChange(async i=>{e.autoInsertProperties=i,await this.plugin.saveSettings()})),this.postsFolderContainer=this.autoRenameContainer.createDiv(),new g.Setting(this.postsFolderContainer).setName("Posts folder").setDesc("Folder name for blog posts (leave blank to use the vault folder). You can specify the default location for new notes in Obsidian's 'Files and links' settings.").addText(t=>t.setPlaceholder("Enter folder path").setValue(e.postsFolder).onChange(async i=>{e.postsFolder=i,await this.plugin.saveSettings()})),this.onlyAutomateContainer=this.autoRenameContainer.createDiv(),new g.Setting(this.onlyAutomateContainer).setName("Only automate in this folder").setDesc("When enabled, automation will only trigger for new .md files within the specified Posts folder and subfolders.").addToggle(t=>t.setValue(e.onlyAutomateInPostsFolder).onChange(async i=>{e.onlyAutomateInPostsFolder=i,await this.plugin.saveSettings(),this.updateExcludedDirsField()})),this.excludedDirsContainer=this.autoRenameContainer.createDiv({cls:"excluded-dirs-field"}),this.excludedDirsContainer.style.display=e.onlyAutomateInPostsFolder?"none":"block",new g.Setting(this.excludedDirsContainer).setName("Excluded directories").setDesc("Directories to exclude from automatic post creation (e.g., pages|posts/example). Excluded directories and their child folders will be ignored. Use '|' to separate multiple directories.").addText(t=>t.setPlaceholder("pages|posts/example").setValue(e.excludedDirectories).onChange(async i=>{e.excludedDirectories=i,await this.plugin.saveSettings()})),this.creationModeContainer=this.autoRenameContainer.createDiv(),new g.Setting(this.creationModeContainer).setName("Creation mode").setDesc("How to create new posts: file-based or folder-based with index.md.").addDropdown(t=>t.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(e.creationMode).onChange(async i=>{e.creationMode=i,await this.plugin.saveSettings(),this.updateIndexFileField()})),this.indexFileContainer=this.autoRenameContainer.createDiv({cls:"index-file-field"}),this.indexFileContainer.style.display=e.creationMode==="folder"?"block":"none",new g.Setting(this.indexFileContainer).setName("Index file name").setDesc("Name for the main file in folder-based mode (without .md extension).").addText(t=>t.setPlaceholder("index").setValue(e.indexFileName).onChange(async i=>{e.indexFileName=i||"index",await this.plugin.saveSettings()})),this.underscorePrefixContainer=this.autoRenameContainer.createDiv(),new g.Setting(this.underscorePrefixContainer).setName("Use underscore prefix for drafts").setDesc("Add an underscore prefix (_post-title) to new notes by default when enabled. This hides them from Astro, which can be helpful for post drafts. Disable to skip prefixing.").addToggle(t=>t.setValue(e.enableUnderscorePrefix).onChange(async i=>{e.enableUnderscorePrefix=i,await this.plugin.saveSettings()})),new g.Setting(s).setName("Link base path").setDesc("Base path for converted links (e.g., /blog/, leave blank for root domain).").addText(t=>t.setPlaceholder("/blog/").setValue(e.linkBasePath).onChange(async i=>{e.linkBasePath=i,await this.plugin.saveSettings()})),new g.Setting(s).setName("Date format").setDesc("Format for the date in properties (e.g., YYYY-MM-DD, MMMM D, YYYY, YYYY-MM-DD HH:mm).").addText(t=>t.setPlaceholder("YYYY-MM-DD").setValue(e.dateFormat).onChange(async i=>{e.dateFormat=i||"YYYY-MM-DD",await this.plugin.saveSettings()})),new g.Setting(s).setName("Properties template").addTextArea(t=>(t.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
tags: []
---
`).setValue(e.defaultTemplate).onChange(async i=>{e.defaultTemplate=i,await this.plugin.saveSettings()}),t.inputEl.classList.add("astro-composer-template-textarea"),t)).then(t=>{t.descEl.empty();let i=t.descEl.createEl("div");i.innerHTML="Used for new posts and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),new g.Setting(s).setName("Automate page creation").setDesc("Enable automatic page creation in a specified folder.").addToggle(t=>t.setValue(e.enablePages).onChange(async i=>{e.enablePages=i,await this.plugin.saveSettings(),this.plugin.registerCreateEvent(),this.updatePagesFields()})),this.pagesFieldsContainer=s.createDiv(),this.pagesFieldsContainer.style.display=e.enablePages?"block":"none",new g.Setting(this.pagesFieldsContainer).setName("Pages folder").setDesc("Folder for pages (leave blank to disable). Posts automation will exclude this folder.").addText(t=>t.setPlaceholder("Enter folder path").setValue(e.pagesFolder).onChange(async i=>{e.pagesFolder=i,await this.plugin.saveSettings()})),new g.Setting(this.pagesFieldsContainer).setName("Page properties template").addTextArea(t=>(t.setPlaceholder(`---
title: "{{title}}"
description: ""
---
`).setValue(e.pageTemplate).onChange(async i=>{e.pageTemplate=i,await this.plugin.saveSettings()}),t.inputEl.classList.add("astro-composer-template-textarea"),t)).then(t=>{t.descEl.empty();let i=t.descEl.createEl("div");i.innerHTML="Used for new pages and when standardizing properties.<br />Variables include {{title}} and {{date}}.<br />Do not wrap {{date}} in quotes as it represents a datetime value, not a string.<br />The 'standardize properties' command ignores anything below the second '---' line."}),this.updateConditionalFields(),this.updateIndexFileField(),this.updateExcludedDirsField(),this.updatePagesFields()}updateConditionalFields(){if(this.autoRenameContainer){let s=this.plugin.settings;this.autoRenameContainer.style.display=s.automatePostCreation?"block":"none"}}updateIndexFileField(){if(this.indexFileContainer){let s=this.plugin.settings;this.indexFileContainer.style.display=s.creationMode==="folder"?"block":"none"}}updateExcludedDirsField(){if(this.excludedDirsContainer){let s=this.plugin.settings;this.excludedDirsContainer.style.display=s.onlyAutomateInPostsFolder?"none":"block"}}updatePagesFields(){if(this.pagesFieldsContainer){let s=this.plugin.settings;this.pagesFieldsContainer.style.display=s.enablePages?"block":"none"}}};var N=class extends k.Plugin{async onload(){await this.loadSettings(),this.fileOps=new T(this.app,this.settings),this.templateParser=new P(this.app,this.settings),this.app.workspace.onLayoutReady(()=>{this.registerCreateEvent()}),R(this,this.settings),this.addSettingTab(new $(this.app,this))}registerCreateEvent(){if(this.createEvent&&this.app.vault.off("create",this.createEvent),this.settings.automatePostCreation||this.settings.enablePages){let s=0;this.createEvent=async e=>{let t=Date.now();if(!(t-s<S.DEBOUNCE_MS)&&(s=t,e instanceof k.TFile&&e.extension==="md")){let i=e.path,r=await this.app.vault.adapter.stat(e.path),a=(r==null?void 0:r.mtime)&&t-r.mtime<S.STAT_MTIME_THRESHOLD,l=(await this.app.vault.read(e)).trim()==="";if(!a||!l)return;let p=this.settings.postsFolder||"",d=this.settings.enablePages&&this.settings.pagesFolder||"",f=!1;d&&(i.startsWith(d+"/")||i===d)&&(f=!0);let h=this.app.metadataCache.getFileCache(e);if(!h||!h.sections||h.sections.length===0)if(f)this.settings.enablePages&&new b(this.app,e,this,"page").open();else if(this.settings.onlyAutomateInPostsFolder)(!p||i.startsWith(p+"/")||i===p)&&new b(this.app,e,this,"post").open();else{let y=this.settings.excludedDirectories.split("|").map(u=>u.trim()).filter(u=>u.length>0);d&&y.push(d),y.some(u=>i.startsWith(u+"/")||i===u)||new b(this.app,e,this,"post").open()}}},this.registerEvent(this.app.vault.on("create",this.createEvent))}}async loadSettings(){this.settings=Object.assign({},I,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
